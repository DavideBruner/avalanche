/**
 * @name Functions
 * @level 2.2.
 */
/**
 * @name strip-units
 * @level 2.2.1.
 * @description
 *   avalanche-strip-units($number)
 */
@function avalanche-strip-units($number) {
  @return $number / ($number * 0 + 1);
}



/**
 * @name px2em
 * @level 2.2.2.
 * @description
 *   Convert a px value to em  
 *   based on $font-base-size  
 *   avalanche-px2em($px, $base: $font-base-size)
 */
@function avalanche-px2em($px, $base: $font-base-size) {
  @if unit($px) == px {
    @return (avalanche-strip-units($px) / avalanche-strip-units($base)) * 1em;
  }
  @return $px;
}



/**
 * @name em2px
 * @level 2.2.3.
 * @description
 *   Convert a em value to px  
 *   based on $font-base-size  
 *   avalanche-em2px($em, $base: $font-base-size)
 */
@function avalanche-em2px($em, $base: $font-base-size) {
  @if unit($em) == em {
    @return (avalanche-strip-units($em) * avalanche-strip-units($base)) * 1px;
  }
  @return $em;
}



/**
 * @name em2rem
 * @level 2.2.4.
 * @description
 *   Convert a em value to rem  
 *   avalanche-em2rem($em)
 */
@function avalanche-em2rem($em) {
  @if unit($em) == em {
    @return avalanche-strip-units($em) * 1rem;
  }
  @return $em;
}



/**
 * @name breakpointmax
 * @level 2.2.5.
 * @description
 *   Get the max-width value of a breakpoint  
 *   avalanche-breakpointmax($breakpoint, $base: $font-base-size)
 */
@function avalanche-breakpointmax($breakpoint, $base: $font-base-size) {
  @if unit($breakpoint) == em {
    $em1px: 1 / avalanche-strip-units($base);
    @return $breakpoint - $em1px;
  }
  @return $breakpoint - 1;
}